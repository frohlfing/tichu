/* --- Animation für fliegende Karten --- */

.flying-card_alt {
    position: absolute;
    z-index: 1000; /* Stellt sicher, dass die Karte über allem anderen fliegt */
    width: 5em;    /* Basisgröße, wird von JS ggf. angepasst */
    height: 7em;
    background-size: cover;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.5);
    pointer-events: none; /* Verhindert, dass man mit der fliegenden Karte interagiert */

    /* Die eigentliche Transition, die die Animation steuert */
    transition: transform 0.6s ease-in-out, width 0.6s ease-in-out, height 0.6s ease-in-out;
    /*transition: transform 0.4s ease-out, opacity 0.4s ease-out;*/
}

/* css/animations.css */

.flying-card {
    position: absolute;
    z-index: 1000;
    /*pointer-events: none;*/
    /*background-size: cover;*/
    /*border-radius: 5px; !* Wie bei der normalen .card Klasse *!*/
    /*box-shadow: 0 2px 10px rgba(0,0,0,0.5); !* Wie bei der normalen .card Klasse *!*/

    /* Die Transition gilt jetzt nur noch für die transform-Eigenschaft.
       Größenänderungen werden über scale() gemacht, nicht über width/height. */
    transition: transform 800ms cubic-bezier(0.4, 0, 0.2, 1); /* Eine weichere Easing-Funktion */
}

/* --- Animation für das Wenden von Karten --- */

.card-flipper {
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

.card-flipper.is-flipped {
    transform: rotateY(180deg);
}

/* Damit das Wenden funktioniert, müssen die Vorder- und Rückseiten korrekt positioniert sein. */
/* Dies erfordert, dass die .card-Elemente in einem .card-flipper Container sind. */
.card-flipper .card-face {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* Versteckt die Rückseite eines Elements */
}

.card-flipper .card-face.back {
    transform: rotateY(180deg);
}

/* --- Animation zum Entfernen von Karten --- */

.card.is-removing {
    transition: transform 0.4s ease-in, opacity 0.4s ease-in;
    transform: translateY(150%) scale(0.5); /* Schiebt die Karte nach unten und verkleinert sie */
    opacity: 0;
}

/* --- Animation für die Bombe --- */

@keyframes bomb-text-effect {
    0% {
        transform: scale(0.5);
        opacity: 0;
    }
    50% {
        transform: scale(1.5);
        opacity: 1;
    }
    100% {
        transform: scale(2.5);
        opacity: 0;
    }
}

.bomb-effect-text {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 8em;
    font-weight: bold;
    color: white;
    text-shadow: 0 0 10px red, 0 0 20px red, 0 0 30px orange;
    pointer-events: none;
    transform: translate(-50%, -50%);
    animation: bomb-text-effect 0.8s ease-out forwards;
    z-index: 2000;
}

@keyframes bomb-text-effect2 {
    0% {
        transform: translate(-50%, -50%) scale(0.5);
        opacity: 0.5;
    }
    70% {
        transform: translate(-50%, -50%) scale(1.5);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(1.2);
        opacity: 0;
    }
}

.bomb-effect2-text {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 100px;
    font-weight: bold;
    color: red;
    text-shadow: 3px 3px 0 #000, -3px -3px 0 #000, 3px -3px 0 #000, -3px 3px 0 #000;
    opacity: 1;
    pointer-events: none;
    transform: translate(-50%, -50%) scale(1);
    animation: bomb-text-effect2 0.8s ease-out forwards;
    z-index: 200;
}

@keyframes screen-shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

.screen-shake-effect {
    animation: screen-shake 0.5s linear;
}

/* --- Pulsier-Animation --- */

@keyframes pulse-effect {
    0% {
        transform: scale(1);
        /*opacity: 0.7;*/
    }
    50% {
        transform: scale(1.15);
        /*opacity: 1;*/
    }
    100% {
        transform: scale(1);
        /*opacity: 0.7;*/
    }
}

.is-pulsing {
    /* Wende die Keyframe-Animation an */
    animation: pulse-effect 1.5s infinite ease-in-out;
}

/* --- Score-Update-Animation --- */

@keyframes score-update-flash {
    0% {
        background-color: transparent;
    }
    50% {
        background-color: rgba(255, 255, 0, 0.7);
    }
    /* Gelber Blitz */
    100% {
        background-color: transparent;
    }
}

.score-updated {
    animation: score-update-flash 0.5s ease-in-out;
}