/**
 * Animation für fliegende Karten.
 *
 * Mit `transition` wird festgelegt, dass eine Änderung von `transform` in 1500ms vollzogen wird.
 * Die Animation wird also gestartet, in dem `transform` gesetzt wird. Dies wird hier mit JS gemacht.
 * Mit `transform` kann man u.a. verschieben, drehen oder skalieren.
 * Cubic-bezier: https://cubic-bezier.com/
 */

.flying-card,
.flying-turn {
    position: absolute;
    z-index: 1000;
    transition: transform 1500ms cubic-bezier(0.4, 0, 0.4, 1);
}

.flying-turn .card {
    /*margin: 0 -85px !important; */  /* Überlappung, ursprünglich 90px */
}

/**
 * Animation für die Bombe.
 *
 * Die Animation wird durch das Hinzufügen der Klasse "bomb-effect-text" ausgelöst.
 */

.bomb-effect-text {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 160px;
    font-weight: bold;
    color: white;
    text-shadow: 0 0 10px red, 0 0 20px red, 0 0 30px orange;
    pointer-events: none;
    transform: translate(-50%, -50%); /* zentrieren */
    animation: bomb-effect 800ms ease-out forwards; /* dies löst die Animation aus */
    z-index: 2000;
}

@keyframes bomb-effect {
    0% {
        transform: translate(-50%, -50%) scale(0.6); /* 96px*/
        opacity: 0.5;
    }
    70% {
        transform: translate(-50%, -50%) scale(1); /* 160px */
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(3); /* 480px */
        opacity: 0;
    }
}

/**
 * Score-Update-Animation.
 *
 * Die Animation wird durch das Hinzufügen der Klasse "score-updated" ausgelöst.
 * Mit `animation` in dieser Klasse wird angegeben, dass die Keyframes "score-update-flash" in 500ms abgespielt werden.
 */

.score-updated {
    animation: score-update-flash 500ms ease-in-out;
}

@keyframes score-update-flash {
    0% {
        /*background-color: transparent;*/
        color: #f0f0f0; /* siehe table-view.css, .top-bar #score-display */
        scale: 0.2;
    }
    50% {
        /*background-color: rgba(255, 255, 0, 0.7);*/
        color: yellow;
        scale: 1.3;
    }
    100% {
        /*background-color: transparent;*/
        color: #f0f0f0;
        scale: 1;
    }
}

/* -------------------------------------------------------------------------*/
/* Ab hier wird nichts verwendet. */
/* -------------------------------------------------------------------------*/

/**
 * Pulsier-Animation (für den Wunsch und Tichu)
 */

.is-pulsing {
    animation: pulse-effect 1500ms infinite ease-in-out;
}

@keyframes pulse-effect {
    0% {
        transform: scale(1);
        /*opacity: 0.7;*/
    }
    50% {
        transform: scale(1.15);
        /*opacity: 1;*/
    }
    100% {
        transform: scale(1);
        /*opacity: 0.7;*/
    }
}

/**
 * Animation für das Wenden von Karten.
 *
 * Damit das Wenden funktioniert, müssen die Vorder- und Rückseiten korrekt positioniert sein.
 * Dies erfordert, dass die .card-Elemente in einem .card-flipper Container sind.
 */

.card-flipper {
    transition: transform 600ms;
    transform-style: preserve-3d;
}

.card-flipper.is-flipped {
    transform: rotateY(180deg);
}


.card-flipper .card-face {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* versteckt die Rückseite eines Elements */
}

.card-flipper .card-face.back {
    transform: rotateY(180deg);
}

/**
 * Animation zum Entfernen von Karten.
 */

.card.is-removing {
    transition: transform 200ms ease-in, opacity 0.4s ease-in;
    transform: translateY(150%) scale(0.5); /* schiebt die Karte nach unten und verkleinert sie */
    opacity: 0;
}
